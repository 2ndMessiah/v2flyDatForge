name: Build dlc.dat
on:
  workflow_dispatch:
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v5
        with:
          path: code
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: code/go.mod
          cache-dependency-path: code/go.sum
      - name: Set variables
        run: |
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
        shell: bash
      - name: Build dlc.dat file
        run: |
          cd code || exit 1
          cd data
          rm -rf *
          curl -L https://energized.pro/nsfw/domains.txt > nsfw
          cd ..
          go run ./ --outputdir=../
          cd ..
          # 移除下面这行：cd ../ && rm -rf code
          # 保持 'code' 目录存在，以便 gh 命令可以找到 .git 仓库
      - name: Generate dlc.dat sha256 hash
        run: |
          sha256sum dlc.dat > dlc.dat.sha256sum
      - name: Generate Zip
        run: |
          zip -9 dlc.dat.zip dlc.dat
          sha256sum dlc.dat.zip > dlc.dat.zip.sha256sum
      - name: Generate XZ
        run: |
          xz -z -9 -k dlc.dat
          sha256sum dlc.dat.xz > dlc.dat.xz.sha256sum
          cp dlc* ./code
          cd code
      - name: Release and upload assets
        run: |
          gh release create ${{ env.TAG_NAME }} --generate-notes --latest --title ${{ env.RELEASE_NAME }} ./dlc.dat ./dlc.dat.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Release Firmware
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     tag_name: ${{ env.TAG_NAME }}_${{ env.RELEASE_NAME }}
      #     files: ${{ inputs.model == 'n1_immwrt' && env.PACKAGED_OUTPUTPATH || './firmware' }}/*.*
      #     body_path: ./release_body.txt
